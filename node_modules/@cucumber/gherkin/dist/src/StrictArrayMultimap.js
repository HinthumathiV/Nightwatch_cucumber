"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var multimaps_1 = require("@teppeis/multimaps");
var StrictArrayMultimap = /** @class */ (function (_super) {
    __extends(StrictArrayMultimap, _super);
    function StrictArrayMultimap() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StrictArrayMultimap.prototype.put = function (key, value) {
        if (key === undefined) {
            throw new Error('Key cannot be undefined');
        }
        if (value === undefined) {
            throw new Error('Value cannot be undefined');
        }
        return _super.prototype.put.call(this, key, value);
    };
    StrictArrayMultimap.prototype.get = function (key) {
        if (key === undefined) {
            throw new Error('Key cannot be undefined');
        }
        var result = _super.prototype.get.call(this, key);
        // if (result.length === 0) {
        //   throw new Error(
        //     `No values found for key ${key}. Keys: [${Array.from(this.keys())}]`
        //   )
        // }
        return result;
    };
    return StrictArrayMultimap;
}(multimaps_1.ArrayMultimap));
exports.default = StrictArrayMultimap;
//# sourceMappingURL=StrictArrayMultimap.js.map